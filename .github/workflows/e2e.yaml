name: E2E

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

env:
  state_path: /tmp/e2e-${{ github.run_id }}-${{ github.run_attempt }}/state
  env_path: /tmp/e2e-${{ github.run_id }}-${{ github.run_attempt }}/.env
  state_cache_prefix: e2e-${{ github.run_id }}-${{ github.run_attempt }}
  config_path: .github/test_github_watcher_config.yaml
  env_variables: |
    GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
    TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
    TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_TEST_CHAT_ID }}
    GITHUB_WATCHER_LOGS__LEVEL=DEBUG

jobs:
  e2e-default:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        id: test_run
        uses: ./
        with:
          config_path: ${{ env.config_path }}
          env_variables: ${{ env.env_variables }}
          env_path: ${{ env.env_path }}-default

      - name: Validate state folder deletion
        run: test -d $state_path && exit 1 || exit 0

      - name: Validate env file deletion
        run: test -f $env_path && exit 1 || exit 0

  e2e-no-cache:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Try restore cache
        id: try-restore-cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.state_cache_prefix }}-no-cache
          path: ${{ env.state_path }}-no-cache
          lookup-only: true

      - name: Assert no cache exists
        uses: nick-fields/assert-action@v2
        with:
          comparison: notEqual
          actual: ${{ steps.try-restore-cache.outputs.cache-hit }}
          expected: "true"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        uses: ./
        with:
          config_path: ${{ env.config_path }}
          env_path: ${{ env.env_path }}-no-cache
          env_variables: ${{ env.env_variables }}
          state_cache_prefix: ${{ env.state_cache_prefix }}-no-cache
          state_path: ${{ env.state_path }}-no-cache

      - name: Validate cache exists
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.state_cache_prefix }}-no-cache
          path: ${{ env.state_path }}-no-cache
          lookup-only: true
          fail-on-cache-miss: true

  e2e-cache:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Test Run
        uses: ./
        with:
          config_path: ${{ env.config_path }}
          env_path: ${{ env.env_path }}-cache
          env_variables: ${{ env.env_variables }}
          state_cache_prefix: ${{ env.state_cache_prefix }}-cache
          state_path: ${{ env.state_path }}-cache

      - name: Validate cache exists
        id: validate-cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.state_cache_prefix }}-cache
          path: ${{ env.state_path }}-cache
          lookup-only: true
          fail-on-cache-miss: true

      - name: Test Run
        uses: ./
        with:
          config_path: ${{ env.config_path }}
          env_path: ${{ env.env_path }}-cache
          env_variables: ${{ env.env_variables }}
          state_cache_prefix: ${{ env.state_cache_prefix }}-cache
          state_path: ${{ env.state_path }}-cache

      - name: Validate cache exists
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.state_cache_prefix }}-cache
          path: ${{ env.state_path }}-cache
          lookup-only: true
          fail-on-cache-miss: true

  e2e:
    runs-on: ubuntu-latest
    if: always() && !cancelled()

    needs:
      - e2e-default
      - e2e-no-cache
      - e2e-cache

    steps:
      - name: Collect Results
        uses: ovsds/collect-needs-result-action@v1
        with:
          needs_json: ${{ toJson(needs) }}
          skip_allowed: false
