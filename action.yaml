name: "Github Watcher Action"
description: "Run Github Watcher"

inputs:
  version:
    description: "Github Watcher version"
    required: true
    default: "0.5.0"
  config_path:
    description: "Path to config file"
    required: true
  env_variables:
    description: "Environment variables"
    required: false
  state_path:
    description: "Path to state directory, should be absolute and independent from the runner's workspace, otherwise cache will not work correctly"
    required: false
    default: "/tmp/github-watcher-action/state"
  env_path:
    description: "Path to env file"
    required: false
    default: ".env"
  state_cache_prefix:
    description: "Cache prefix for state directory"
    required: false
    default: "github-watcher-state"

runs:
  using: "composite"
  steps:
    - name: Prepare env file
      shell: bash
      env:
        env_variables: ${{ inputs.env_variables }}
      run: |
        echo "$env_variables" >> ${{ inputs.env_path }}

    - name: Prepare state directory
      id: prepare-state-directory
      uses: actions/cache/restore@v4
      with:
        path: ${{ inputs.state_path }}
        # cache is immutable, so we need to create a new key for each run
        # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
        key: ${{ inputs.state_cache_prefix }}-${{ github.run_id }}-${{ github.run_attempt }}
        restore-keys: |
          ${{ inputs.state_cache_prefix }}-
        enableCrossOsArchive: true

    - name: Create state directory if cache miss
      if: steps.prepare-state-directory.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ${{ inputs.state_path }}

    - name: Run docker container
      shell: bash
      env:
        version: ${{ inputs.version }}
      run: |
        docker run \
          --rm \
          --volume ${{ github.action_path }}/settings.yaml:/settings.yaml \
          --volume ${{ github.workspace }}/${{ inputs.config_path }}:/config.yaml \
          --volume ${{ inputs.state_path }}:/state \
          --env-file ${{ inputs.env_path }} \
          --env GITHUB_WATCHER_SETTINGS_YAML=/settings.yaml \
          ghcr.io/ovsds/github-watcher:${{ inputs.version }}

    - name: Print state directory
      shell: bash
      run: |
        find ${{ inputs.state_path }} -ls

    - name: Save state directory
      if: success() || failure()
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.state_path }}
        key: ${{ inputs.state_cache_prefix }}-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Cleanup state directory
      if: success() || failure()
      shell: bash
      run: |
        sudo rm -rf ${{ inputs.state_path }}

    - name: Cleanup env file
      if: success() || failure()
      shell: bash
      run: |
        sudo rm ${{ inputs.env_path }}

branding:
  icon: "message-circle"
  color: "blue"
